## ESTRUCTURA DE COMPUTADORES   (ETSInformatica)
##  
##
## LAB 13. Synchronization by interrupts
##
## Initial handler code


##############################################################
##              HANDLER DATA SEGMENT                        ##
##############################################################

			.kdata
var1:	    .word 0xFFFFFFFF
context:    .space 16

#############################################################
##                  HANDLER CODE                           ##
#############################################################

          .ktext 0x80000080

    ## Save the user program context
    .set noat
    sw $at, 0x0($k1)
    .set at
    sw $t0, 0x4($k1)
    sw $a0, 0x8($k1)
    sw $v0, 0xC($k1)

    ## Identify and handle interrupts
    li $v0, 11
    li $a0, '*'
    syscall

    li $t0, 0xffff0000
    lw $a0, 4($t0)

    ## Restore context
    .set noat
    lw $at, 0x0($k1)
    .set at
    lw $t0, 0x4($k1)
    lw $a0, 0x8($k1)
    lw $v0, 0xC($k1)

    ## Set user mode and return to the user program
    mfc0 $k0, $14               # return to the correct address
	rfe
	jr $k0

#############################################################
##                    Starting code                        ##
#############################################################

          .text
          .globl __start
__start:
    ## Starting code
    la $k1, context
    # 1. Enable interrupts for the keyboard
    la $t0, 0xffff0000
    li $t1, 0x2
    sb $t1, 0($t0)
    # 2. Unmask the exception coprocessor state register interrupt line
    # 3. Enable interrupts in the processor state register
    li $t1, 0x101
    mtc0 $t1, $12


    ## Jump to user program
	jal main

    ## Ending code
	li $v0, 10
	syscall	 # exit function

